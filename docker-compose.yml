services:
  webapi:
    build:
      context: .
      dockerfile: Src/Presentation/Template.WebApi/Dockerfile
    container_name: my_dotnet_app
    depends_on:
      - db
      - elasticsearch
    environment:
      - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Username=postgres;Password=Minas8gerais@;Database=TemplateCleanArch;SearchPath=public
      - ConnectionStrings__IdentityConnection=Host=db;Port=5432;Username=postgres;Password=Minas8gerais@;Database=TemplateCleanArchIdentity;SearchPath=public
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetcore.pfx
      - ASPNETCORE_Kestrel__Certificates__Default__Password=senhaSegura
    ports:
      - "8080:8080"
      - "8081:8081"
    volumes:
      - C:/Users/User/.aspnet/https:/https:ro
    networks:
      - nw

  db:
    image: postgres:16
    container_name: my_postgres_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Minas8gerais@
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    networks:
      - nw

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.4
    environment:
      - node.name=elasticsearch
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    volumes:
      - v01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - nw
    healthcheck: 
      test: ["CMD", "curl", "-f", "http://elasticsearch:9200"]
      interval: 30s
      timeout: 10s
      retries: 5

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.17.4
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    depends_on:
      elasticsearch:
        condition: service_healthy
    ports:
      - 5601:5601
    networks:
      - nw
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:latest
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: kalo
      RABBITMQ_DEFAULT_PASS: kalo
    configs:
      - source: rabbitmq-plugins
        target: /etc/rabbitmq/enabled_plugins
    volumes:
      - rabbitmq-lib:/var/lib/rabbitmq/
      - rabbitmq-log:/var/log/rabbitmq
    networks:
      - nw
  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - 6379:6379
    networks:
      - nw
    volumes:
      - redis-volume-data:/data
    command:
      - --requirepass password

  redis-insight:
    image: redislabs/redisinsight:1.14.0
    container_name: redis-insight
    restart: always
    depends_on:
      - redis
      - redis-graph
      - redis-search
      - redis-timeseries
    ports:
      - 6380:8001
    networks:
      - nw
    volumes:
      - redis-insight-volume_data:/db

  redis-graph:
    image: redislabs/redisgraph
    ports:
      - 6381:6379
    restart: always
    networks:
      - nw

  redis-search:
    image: redislabs/redisearch:latest
    ports:
      - 6382:6379
    restart: always
    networks:
      - nw

  redis-timeseries:
    image: redislabs/redistimeseries
    ports:
      - 6383:6379
    restart: always
    networks:
      - nw
volumes:
  postgres-data:
  v01:
  rabbitmq-lib:
  rabbitmq-log:
  redis-volume-data:
  redis-insight-volume_data:

configs:
  rabbitmq-plugins:
    content: "[rabbitmq_management]."

networks:
  nw:
